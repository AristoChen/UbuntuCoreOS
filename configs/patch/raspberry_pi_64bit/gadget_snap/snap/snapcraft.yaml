assumes: [kernel-assets]

parts:
  u-boot:
    override-build: |
      defconfig_list=( rpi_arm64_defconfig )

      mkdir -p "${CRAFT_PART_INSTALL}"/u-boot-bin
      for defconfig in "${defconfig_list[@]}"; do
        cat << EOF >> configs/"${defconfig}"
      CONFIG_FIT=y
      CONFIG_LOCALVERSION_AUTO=n
      EOF
        make "${defconfig}"

        make -j$(nproc) LOCALVERSION="-uc22"

        platform=$(echo "${defconfig}" | sed 's/rpi_\(.*\)_defconfig/\1/' | sed 's/_/-/g')
        cp u-boot.bin "${CRAFT_PART_INSTALL}"/u-boot-bin/u-boot-"${platform}".bin
      done

      # Copy licenses
      mkdir -p "${CRAFT_PART_INSTALL}"/usr/share/doc/u-boot
      cp -a Licenses/* "${CRAFT_PART_INSTALL}"/usr/share/doc/u-boot

      if [ '__BOOT_PROCESS__' == 'U-Boot' ]; then
        mkenvimage -s 4096 -o "${CRAFT_PART_INSTALL}"/boot.sel - < /dev/null
        touch "${CRAFT_PART_INSTALL}"/uboot.conf
      fi

  boot-script:
    override-build: |
      if [ '__BOOT_PROCESS__' == 'U-Boot' ]; then
        sed -i '2 i\
        \
        \# Take fdt addr from the prior stage boot loader, if available\
        if test -n \"${fdt_addr}\"; then\
          fdt addr ${fdt_addr}\
          fdt move ${fdt_addr} ${fdt_addr_r}  \# implicitly sets fdt active\
        else\
          fdt addr ${fdt_addr_r}\
        fi\
        fdt get value bootargs /chosen bootargs' boot.cmd

        mkimage -C none -A __ITS_ARCH__ -T script -d boot.cmd "${CRAFT_PART_INSTALL}"/boot.scr
      fi

  boot-assets:
    plugin: nil
    source: https://github.com/raspberrypi/firmware.git
    source-type: git
    source-depth: 1
    source-branch: master
    override-build: |
      rm -rf boot/bcm*dtb boot/kernel*.img
      mv boot "${CRAFT_PART_INSTALL}"/boot-assets

      cat << EOF > "${CRAFT_PART_INSTALL}"/boot-assets/config.txt
      [pi3]
      # Please see https://www.raspberrypi.com/documentation/computers/configuration.html#mini-uart-and-cpu-core-frequency
      core_freq=250

      [all]
      kernel=u-boot-arm64.bin
      enable_uart=1
      arm_64bit=1
      uart_2ndstage=1
      EOF

      if [ '__BOOT_PROCESS__' == 'UEFI' ]; then
        echo "dtoverlay=miniuart-bt" >> "${CRAFT_PART_INSTALL}"/boot-assets/config.txt
      fi

      cat << EOF > "${CRAFT_PART_INSTALL}"/boot-assets/cmdline.txt
      console=serial0,115200
      EOF
    stage:
      - boot-assets
